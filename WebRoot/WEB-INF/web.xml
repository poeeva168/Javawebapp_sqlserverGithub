<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
	
	<display-name>Spring 3.x MVC</display-name>
	<!-- 
		1. 加载顺序为：context-param -> listener -> filter -> servlet  
		2. filter 拦截资源是按照 filter-mapping 配置节出现的顺序来依次调用 doFilter() 方法
		3. servlet 同 filter 类似		
	-->	
	<!-- Spring ApplicationContext配置文件的路径 ,可使用通配符，多个路径用,号分隔 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/config/spring/spring-common.xml</param-value>
	</context-param>
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>		
	</listener>
	
	<!-- DWR 配置信息 -->
	<listener>
    	<listener-class>org.directwebremoting.servlet.DwrListener</listener-class>
	</listener>
	 
	<servlet>
	    <servlet-name>dwr-invoker</servlet-name>
	    <servlet-class>org.directwebremoting.servlet.DwrServlet</servlet-class>
	    <init-param>
	        <param-name>debug</param-name>
	        <param-value>true</param-value>
	    </init-param>	        
	    <!-- dwr的comet控制 -->
	    <init-param>
	      <param-name>pollAndCometEnabled</param-name>
	      <param-value>true</param-value>
	    </init-param>
	</servlet>
	 
	<servlet-mapping>
	    <servlet-name>dwr-invoker</servlet-name>
	    <url-pattern>/dwr/*</url-pattern>
	</servlet-mapping>
	
	<!-- Druid 内置监控界面使用配置 -->
	<servlet>
    <servlet-name>DruidStatView</servlet-name>
    	<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    	<init-param>
        	<param-name>loginUsername</param-name>
        	<param-value>admin</param-value>
    	</init-param>
    	<init-param>
        	<param-name>loginPassword</param-name>
        	<param-value>1</param-value>
    	</init-param>
	</servlet>
	<servlet-mapping>
	    <servlet-name>DruidStatView</servlet-name>
	    <url-pattern>/druid/*</url-pattern>
	</servlet-mapping>
	
	<!-- px背景图显示红叉叉解决方案 -->
	<servlet>  
		<servlet-name>ImageServlet</servlet-name>  
		<servlet-class>net.sf.jasperreports.j2ee.servlets.ImageServlet</servlet-class>  
	</servlet> 
	<servlet-mapping>  
		<servlet-name>ImageServlet</servlet-name>  
		<url-pattern>/servlets/image</url-pattern>  
	</servlet-mapping> 

	<!-- Spring MVC start -->
	<servlet>
		<servlet-name>SpringMVC</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 默认所对应的配置文件是WEB-INF下的{servlet-name}-servlet.xml，这里可以自定义路径 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/config/spring/springmvc-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>SpringMVC</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<!-- Spring MVC end -->
	
	<!-- WebStatFilter用于采集web-jdbc关联监控的数据 -->
	<filter>
	    <filter-name>DruidWebStatFilter</filter-name>
	    <filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
	    <init-param>
	        <param-name>exclusions</param-name>
	        <param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
	    </init-param>
	    <init-param><!-- 配置principalSessionName，使得druid能够知道当前的session的用户是谁 -->
	        <param-name>principalSessionName</param-name>
	        <param-value>CURRENT_USER</param-value>
    	</init-param>
    	<init-param><!-- 配置profileEnable能够监控单个url调用的sql列表 -->
		    <param-name>profileEnable</param-name>
		    <param-value>true</param-value>
		</init-param>
  	</filter>
  	<filter-mapping>
	    <filter-name>DruidWebStatFilter</filter-name>
	    <url-pattern>/*</url-pattern>
  	</filter-mapping>
	
	<!-- 著名 Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<!-- 强制进行转码 -->
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>	
	
	<!-- 解决不能识别*.ico的图片-->
	<servlet-mapping>
	    <servlet-name>default</servlet-name>
	    <url-pattern>*.ico</url-pattern>
	</servlet-mapping>
	
	<!-- 使Spring支持request与session的scope,如:<bean id="loginAction" class="com.foo.LoginAction" scope="request"/> -->
	<listener>
	  <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>
	<!-- 系统初始化监听器 -->
	<listener>
		<listener-class>com.authority.web.listener.SystemInitListener</listener-class>
	</listener>
	
	<!-- CXFService  -->
	<servlet>
	    <servlet-name>CXFService</servlet-name>
	    <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
	</servlet>
	
	<servlet-mapping>
	    <servlet-name>CXFService</servlet-name>
	    <url-pattern>/Openmas_Webservice/*</url-pattern>
	</servlet-mapping>
		
	
	<!-- Error Page定义 -->
	<error-page>
		<error-code>500</error-code>
		<location>/WEB-INF/views/commons/timeout.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/views/commons/timeout.jsp</location>
	</error-page>
	<error-page>
		<error-code>403</error-code>
		<location>/WEB-INF/views/commons/timeout.jsp</location>
	</error-page>
	
		
	<servlet>
		<servlet-name>file_browser</servlet-name>
		<servlet-class>com.authority.common.ckeditor.FileBrowerController</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>file_browser</servlet-name>
		<url-pattern>/ckeditor_browser</url-pattern>
	</servlet-mapping>
	

	<servlet>
		<servlet-name>SimpleUploader</servlet-name>
		<servlet-class>com.authority.common.ckeditor.CKEditorUploadServlet</servlet-class>
		<init-param>
			<param-name>baseDir</param-name>
			<param-value>/upload/file_for_ck</param-value>
		</init-param>
		<init-param>
			<param-name>debug</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>enabled</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>AllowedExtensionsFile</param-name>
			<param-value></param-value>
		</init-param>
		<init-param>
			<param-name>DeniedExtensionsFile</param-name>
			<param-value>
				html|htm|php|php2|php3|php4|php5|phtml|pwml|inc|asp|aspx|ascx|jsp|cfm|cfc|pl|bat|exe|com|dll|vbs|js|reg|cgi|htaccess|asis|ftl
			</param-value>
		</init-param>
		<init-param>
			<param-name>AllowedExtensionsImage</param-name>
			<param-value>jpg|gif|jpeg|png|bmp</param-value>
		</init-param>
		<init-param>
			<param-name>DeniedExtensionsImage</param-name>
			<param-value></param-value>
		</init-param>
		<init-param>
			<param-name>AllowedExtensionsFlash</param-name>
			<param-value>swf|fla</param-value>
		</init-param>
		<init-param>
			<param-name>DeniedExtensionsFlash</param-name>
			<param-value></param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>SimpleUploader</servlet-name>
		<url-pattern>/ckeditor_uploader</url-pattern>
	</servlet-mapping>
	
	<welcome-file-list>
		<welcome-file>/WEB-INF/views/login.jsp</welcome-file>
	</welcome-file-list>
	
	
	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>
	
</web-app>
