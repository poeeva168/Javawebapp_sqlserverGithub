<?xml version="1.0" encoding="UTF-8" ?>
<configuration scan="true" scanPeriod="30 seconds" debug="false" >

	<!-- 日志存放的路径 ,默认为tomcat下面的logs -->
	<property name="USER_HOME" value="${catalina.base}" />

	<!-- 输出到窗口 -->
	<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
        </encoder>
    </appender>
    
    <!-- 时间滚动输出 level为 DEBUG 日志 -->
	<appender name="file—debug" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY </onMismatch>
        </filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按天分文件夹存放 ，并压缩 -->
			<fileNamePattern>${USER_HOME}/logs/javawebapp_sqlserver/%d{yyyy-MM-dd}/log_debug.%i.txt</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 每个文件的最大值 5MB,超过则编号,生成新文件 -->
				<maxFileSize>5MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- 例如，假设每天滚动，且 maxHistory 是 6，则只 保留最近 6 天的归档文件，删除之前的文件。 -->
			<maxHistory>60</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{HH:mm:ss.SSS} %-5level %logger{40} - %msg%n</pattern>
		</encoder>
	</appender>
	
	<appender name="file—info" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY </onMismatch>
        </filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按天分文件夹存放 ，并压缩 -->
			<fileNamePattern>${USER_HOME}/logs/javawebapp_sqlserver/%d{yyyy-MM-dd}/log_info.%i.txt</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 每个文件的最大值 5MB,超过则编号,生成新文件 -->
				<maxFileSize>5MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- 例如，假设每天滚动，且 maxHistory 是 6，则只 保留最近 6 天的归档文件，删除之前的文件。 -->
			<maxHistory>60</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{HH:mm:ss.SSS} %-5level %logger{40} - %msg%n</pattern>
		</encoder>
	</appender>
	
	<appender name="file—error" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY </onMismatch>
        </filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- 按天分文件夹存放 ，并压缩 -->
			<fileNamePattern>${USER_HOME}/logs/javawebapp_sqlserver/%d{yyyy-MM-dd}/log_error.%i.txt</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 每个文件的最大值 5MB,超过则编号,生成新文件 -->
				<maxFileSize>5MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- 例如，假设每天滚动，且 maxHistory 是 6，则只 保留最近 6 天的归档文件，删除之前的文件。 -->
			<maxHistory>60</maxHistory>
		</rollingPolicy>
		<encoder>
			<pattern>%date{HH:mm:ss.SSS} %-5level %logger{40} - %msg%n</pattern>
		</encoder>
	</appender>
	
		
	<!-- 数据库输出 -->
<!--     
	<appender name="db" class="ch.qos.logback.classic.db.DBAppender">
        <connectionSource
            class="ch.qos.logback.core.db.DriverManagerConnectionSource">
            <driverClass>com.microsoft.sqlserver.jdbc.SQLServerDriver</driverClass>
            <url>jdbc:sqlserver://192.168.1.248:1433;DatabaseName=xg</url>
            <user>sa</user>
            <password>henlo</password>
        </connectionSource>
    </appender> -->
    
	<!-- 	
    <logger name="java.sql.Connection">
        <level value="DEBUG" />
    </logger>
    <logger name="java.sql.Statement">
        <level value="DEBUG" />
    </logger>
    <logger name="java.sql.PreparedStatement" >
    	<level value="DEBUG" />
    </logger> 
    
    <logger name="com.authority">
        <level value="DEBUG" />
    </logger>
    
    <logger name="test.controls" level="INFO" additivity="false" >
    	<appender-ref ref="stdout" />  	
    </logger>
    
    -->

	<!-- TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF -->
    <root level="DEBUG" >
        <appender-ref ref="stdout" />
        <appender-ref ref="file—debug" />
        <appender-ref ref="file—info" />
        <appender-ref ref="file—error" />
		<!--<appender-ref ref="db" /> -->
    </root>

</configuration>