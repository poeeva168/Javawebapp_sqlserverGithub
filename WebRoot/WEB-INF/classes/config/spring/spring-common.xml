<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd	
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	"
	default-lazy-init="true">
	

	<!-- 自动搜索@Component , @Service , @Repository等标注的类 不搜索@Controller的类 -->
	<!-- 自动扫描组件，这里要把web下面的 controller去除，他们是在spring3-servlet.xml中配置的，如果不去除会影响事务管理的。 -->
	<context:component-scan base-package="com.authority" annotation-config="true">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- enable autowire -->
	<context:annotation-config />

	<!-- service层的属性和配置文件读入 ,多个用逗号隔开 -->
	<!-- controller层的属性和配置文件读入 ,多个用逗号隔开-->
	<context:property-placeholder location="classpath:/config/ibatis/jdbc.properties,classpath:/config/others/config.properties" />
	
	<!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->
	<bean class="com.authority.common.springmvc.SpringContextHolder" lazy-init="false" />
	
	<!-- 数据连接事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="druid_sqlserver" />
	</bean>
	
	<bean id="datasourcedao" class="com.authority.dao.DataSourceDao" /> 
  	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
  		<property name="dataSource" ref="druid_sqlserver" /> 
  	</bean>
  	
  	<bean id="njdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
  		<constructor-arg index="0" ref="druid_sqlserver" />
  	</bean>
	
	<bean id="emaxinterfacecontroller" class="com.authority.web.controller.EmaxInterfaceController" />
	
	<!-- define the SqlSessionFactory class="org.mybatis.spring.SqlSessionFactoryBean" -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="druid_sqlserver" />
		<property name="configLocation" value="classpath:/config/ibatis/mybatis-config.xml" />
		<!--
		<property name="typeAliasesPackage" value="com.pojo" />
		<property name="mapperLocations" value="classpath:/sqlmap/*Mapper.xml" /> 
		-->
	</bean>

	<!-- mybatis接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.authority.dao" />
	</bean>
	
	<!-- ibatis 动态加载 sqlmap 配置文件
	<bean id="SqlMapClient" class="com.authority.common.mybatis.dysql.DySqlMapClientFactoryBean">  
    	<property name="configLocation" value="classpath:/config/ibatis/mybatis-config.xml"/>  
    	<property name="dataSource" ref="druid"/>  
	</bean>
	-->
	
	<!-- 连接事务的注解配置 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 数据库连接池 -->
	<import resource="classpath:/config/spring/spring-pool.xml" />
	<import resource="classpath:/config/spring/spring-securitycode.xml" />
	
	<!-- Dwr Comet 配置 -->
	<bean id="chatService" class="test.controls.ChatService"/>
	<bean id="chatMessageClient" class="test.controls.ChatMessageClient"/>

	<!-- RESTFUL Webservice 客户端 -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<!-- We only have one message converter for the RestTemplate, namely 
					the XStream Marshller -->
				<bean
					class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
					<constructor-arg>
						<bean class="org.springframework.oxm.xstream.XStreamMarshaller">

							<!-- Tell XStream to find the alias names in the following classes -->
							<property name="annotatedClasses">
								<list>
									<value>com.authority.pojo.Article</value>
									<value>com.authority.pojo.Category</value>
								</list>
							</property>
						</bean>
					</constructor-arg>
				</bean>
			</list>
		</property>
	</bean>
	
	<!-- 定时器开关 -->
	<task:annotation-driven />
	
	<bean id="TaskPPR_Interface" class="com.henlo.process.TaskPPR_Interface"></bean>
	
	
	<!--
	<task:scheduled-tasks>
		<task:scheduled ref="TaskPPR_Interface" method="datadownload"  cron="0 2/2 * * * ?" />
		<task:scheduled ref="TaskPPR_Interface" method="dataprocess"  cron="0 3/2 * * * ?" />
	</task:scheduled-tasks>	
	 
	    0 3/5 * * * ?
	    0 0 */1 * * ?
	    5/3 * * * * ? 这里表示的是从第五秒开始 ，每三秒执行一次
		秒     0-59     , - * /  
		分     0-59     , - * /  
		小时     0-23     , - * /  
		日     1-31     , - * ? / L W C  
		月     1-12 or JAN-DEC     , - * /  
		周几     1-7 or SUN-SAT     , - * ? / L C #  
		年 (可选字段)     empty, 1970-2099     , - * / 
		
		"0 0 12 * * ?"     每天中午十二点触发  
		"0 15 10 ? * *"     每天早上10：15触发  
		"0 15 10 * * ?"     每天早上10：15触发  
		"0 15 10 * * ? *"     每天早上10：15触发  
		"0 15 10 * * ? 2005"     2005年的每天早上10：15触发  
		"0 * 14 * * ?"     每天从下午2点开始到2点59分每分钟一次触发  
		"0 0/5 14 * * ?"     每天从下午2点开始到2：55分结束每5分钟一次触发  
		"0 0/5 14,18 * * ?"     每天的下午2点至2：55和6点至6点55分两个时间段内每5分钟一次触发  
		"0 0-5 14 * * ?"     每天14:00至14:05每分钟一次触发  
		"0 10,44 14 ? 3 WED"     三月的每周三的14：10和14：44触发  
		"0 15 10 ? * MON-FRI"     每个周一、周二、周三、周四、周五的10：15触发  
		"0 15 10 15 * ?"     每月15号的10：15触发  
		"0 15 10 L * ?"     每月的最后一天的10：15触发  
		"0 15 10 ? * 6L"     每月最后一个周五的10：15触发  
		"0 15 10 ? * 6L"     每月最后一个周五的10：15触发  
		"0 15 10 ? * 6L 2002-2005"     2002年至2005年的每月最后一个周五的10：15触发  
		"0 15 10 ? * 6#3"     每月的第三个周五的10：15触发	
	 -->

</beans>