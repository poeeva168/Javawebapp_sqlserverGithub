<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd	
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 配置 wallfilter -->
	<bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig" init-method="init">
      <!-- 指定配置装载的目录  -->
      <property name="dir" value="META-INF/druid/wall/sqlserver" />
      <property name="multiStatementAllow" value="false" />      
	</bean>
	<bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
		<property name="dbType" value="sqlserver" />
		<property name="config" ref="wall-filter-config" />
		<property name="logViolation" value="true" />
		<property name="throwException" value="false" /> <!-- select sys_guid() from dual  曾被认为注入  -->
	</bean>
	
	<bean id="druid_sqlserver" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	    <!-- 基本属性 url、user、password -->
	    <property name="url" value="${sqlserver.jdbc.url}" />
	    <property name="username" value="${sqlserver.jdbc.username}" />
	    <property name="password" value="${sqlserver.jdbc.password}" />
	      
	    <!-- 配置初始化大小、最小、最大 -->
	    <property name="initialSize" value="1" />
	    <property name="minIdle" value="1" /> 
	    <property name="maxActive" value="20" />
	 
	    <!-- 配置获取连接等待超时的时间 -->
	    <property name="maxWait" value="60000" />
	 
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />
	 
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis" value="300000" />
	  
	    <property name="validationQuery" value="SELECT 'x' " />
	    <property name="testWhileIdle" value="true" />
	    <property name="testOnBorrow" value="false" />
	    <property name="testOnReturn" value="false" />
	 
	    <!-- 打开PSCache，并且指定每个连接上PSCache的大小 
	    	用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false
	    -->
	    <property name="poolPreparedStatements" value="true" />
	    <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	 
	    <!-- 配置监控统计拦截的filters -->
	    <property name="filters" value="stat"/>
	    <!-- 配置其他拦截信息
	    <property name="proxyFilters">
			<list>
              <ref bean="wall-filter"/>              
			</list>
      	</property>
	     -->			    
	    <property name="removeAbandoned" value="true" /> <!-- 打开removeAbandoned功能 -->
    	<property name="removeAbandonedTimeout" value="1800" /> <!-- 1800秒，也就是30分钟 -->
    	<property name="logAbandoned" value="true" /> <!-- 关闭abanded连接时输出错误日志 -->
	</bean>	
	
	<!-- proxool配置 -->
	<bean id="proxool_sqlserver" class="org.logicalcobwebs.proxool.ProxoolDataSource" >
		<property name="driver" value="${sqlserver.jdbc.driverClassName}" />
		<property name="driverUrl" value="${sqlserver.jdbc.url}" />
		<property name="user" value="${sqlserver.jdbc.username}" />
		<property name="password" value="${sqlserver.jdbc.password}" />
		<!--数据源的别名 -->
		<property name="alias" value="sqlserver_poe" />
		<!-- 空闲连接个数 默认为0 -->
		<property name="prototypeCount" value="4" />
		<!--最小连接数(默认5个) -->
		<property name="minimumConnectionCount" value="5" />
		<!--最大连接数(默认15个),超过了这个连接数,再有请求时,就排在队列中等候,最大的等待请求数由maximum-new-connections决定 -->
		<property name="maximumConnectionCount" value="30" />
		<!-- 如果侦察线程发现闲置连接，则会使用这个SQL语句来对这些连接进行检查 -->
		<property name="houseKeepingTestSql" value="SELECT 'x'" />
		 <!-- proxool自动侦察各个连接状态的时间间隔(毫秒),侦察到空闲的连接就马上回收,超时的销毁 默认30秒） -->
		<property name="houseKeepingSleepTime" value="90000" />
		<!-- 最大活动时间(超过此时间线程将被kill,默认为5分钟) -->
		<property name="maximumActiveTime" value="300000"  />
	</bean>

</beans>